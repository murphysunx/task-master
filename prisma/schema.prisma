generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model task {
  id          Int       @id @default(autoincrement())
  completed   Boolean   @default(false)
  title       String    @db.VarChar(255)
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdBy   user      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  belongTo    taskList? @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId      Int?
}

model taskList {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  createdBy user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  task      task[]
}

model user {
  id        Int        @id @default(autoincrement())
  name      String     @unique @db.VarChar(255)
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  task      task[]
  taskList  taskList[]
}
